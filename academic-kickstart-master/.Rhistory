blogdown:::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
install.packages("gtrendsR")
install.packages("maps")
install.packages("lettercase")
install.packages("pals")
install.packages("viridis")
install.packages("scico")
install.packages("ggrepel")
devtools::install_github('PMassicotte/gtrendsR')
library(swirl)
detach(swirl)
detach(swirl)
detach("package:swirl", unload=TRUE)
install.packages(c("BDgraph", "DHARMa", "dplyr", "evaluate", "forcats", "igraph", "jomo", "jtools", "later", "lmerTest", "naniar", "OpenMx", "psychmeta", "qgraph", "readxl", "servr", "simstudy", "stringi", "stringr", "VIM", "visdat", "XML"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
wordcountaddin:::text_stats()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages(c("dendextend", "insight", "kutils", "nlme", "pillar", "RcppArmadillo", "robustbase", "sfsmisc"))
blogdown:::new_post_addin()
install.packages("esquisse")
library(esquisse)
esquisse:::esquisser()
blogdown:::serve_site()
.libPaths
.libPaths()
.libPaths()
?R_LIBS_USER
help("Rprofile")
if(!file.exists("~/.Rprofile")) # only create if not already there
file.create("~/.Rprofile")    # (don't overwrite it)
file.edit("~/.Rprofile")
.env = new.env()
.env = new.env()
R.home()
help("Startup")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages(c("dbplyr", "e1071", "fpc", "gap", "groupedstats", "markdown", "mlogit", "numDeriv", "openssl", "performance", "prabclus", "pROC", "quantreg", "RJSONIO", "rorcid", "sjlabelled", "sjstats", "statnet.common", "stringdist", "tibble", "tseries", "WRS2", "XML"))
blogdown:::serve_site()
library(rtweet)
# Amebil tweet tentang pemilu, curang
/
curang <- search_tweets(
"pemilu", "curang", geocode = lookup_coords("id"), n = 10000
)
curang <- search_tweets(
"pemilu", geocode = lookup_coords("id"), n = 10000
)
View(curang)
curang <- search_tweets(
"pemilu", n = 10000
)
View(curang)
library(ggplot2)
esquisse:::esquisser()
esquisse:::esquisser()
esquisse:::esquisser()
blogdown:::serve_site()
library(psych)
library(MBESS)
library(lavaan)
data <- data("PoliticalDemocracy")
data <- data(PoliticalDemocracy)
force(PoliticalDemocracy)
View(PoliticalDemocracy)
install.packages("qgraph")
library(qgraph)
data <- data(data.big5)
library(qgraph)
data <- data(data.big5)
data <- qgraph::data(data.big5)
?qgraph
qgraph::data(data.big5)
# load dataset
data <- qgraph::data(big5)
qgraph::data(big5)
qgraph::data(big5)
library(qgraph)
qgraph::data(big5)
data <- qgraph::data(big5)
data <- qgraph:::data(big5)
# load dataset
data <- data(big5)
View(big5)
# tes reliabilitasnya
omega(data)
library(psych)
library(MBESS)
# tes reliabilitasnya
omega(data)
# load dataset
data <- data(big5)
library(qgraph)
# load dataset
data <- data(big5)
# tes reliabilitasnya
omega(data)
View(big5)
# load dataset
data()
# load dataset
data <- data(epi)
data(epi)
# load dataset
data <- psych::data(epi)
# load dataset
psych::data(epi)
data(epi)
force(epi)
# load dataset
data <- psych::data(epi)
# tes reliabilitasnya
omega(epi)
# tes reliabilitasnya
omega(Holzinger)
# tes reliabilitasnya
omega(Holzinger)
# tes reliabilitasnya
omega(bfi)
data <- psych::data(bfi)
data <- psych::data(bfi)
data <- data(bfi)
force(bfi)
View(bfi)
?ci.reliabilit
?ci.reliability
ci.reliability(data=data, type="omega", interval.type = "bca", B=1000, conf.level = 0.95)
ci.reliability(data=data, type="omega", interval.type = "bca", B=1000, conf.level = 0.95, N=3570)
ci.reliability(data=data[,1], type="omega", interval.type = "bca", B=1000, conf.level = 0.95, N=3570)
ci.reliability(data=data[,-1], type="omega", interval.type = "bca", B=1000, conf.level = 0.95, N=3570)
ci.reliability(data=data[,-1], type="omega", interval.type = "bca", B=1000, conf.level = 0.95)
ci.reliability(data=data[,-1], type="omega", interval.type = "bca", B=1000, conf.level = 0.95)
ci.reliability(data=bfi, type="omega", interval.type = "bca", B=1000, conf.level = 0.95)
install.packages("praise")
install.packages("beepr")
ci.reliability(data=bfi, type="omega", interval.type = "bca", B=1000, conf.level = 0.95)
ci.reliability(data=bfi, type="omega", interval.type = "bca", B=100, conf.level = 0.95)
omega <- ci.reliability(data=bfi, type="omega", interval.type = "bca", B=50, conf.level = 0.95)
omega <- ci.reliability(data=bfi, type="omega", interval.type = "bca", B=50, conf.level = 0.95) # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
View(bfi)
View(bfi)
# subsetting data, kita ambil 150 responden aja
data <- bfi[1:150]
# subsetting data, kita ambil 150 responden aja
data <- bfi[1:150,]
omega <- ci.reliability(data=data, type="omega", interval.type = "bca", B=50, conf.level = 0.95) # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
omega <- ci.reliability(data=data, type="omega", interval.type = "bca", B=50, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
library(beepr)
omega <- ci.reliability(data=data, type="omega", interval.type = "bca", B=50, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
omega
reliabilitas <- ci.reliability(data=data, type="omega", interval.type = "bca", B=50, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
is.missing(data)
is.na(data)
View(data)
# subsetting data, kita ambil 150 responden aja
data <- bfi[1:150,] %>% na.omit()
library(tidyverse)
# subsetting data, kita ambil 150 responden aja
data <- bfi[1:150,] %>% na.omit()
is.na(data)
reliabilitas <- ci.reliability(data=data, type="omega", interval.type = "bca", B=50, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas <- ci.reliability(data=data, type="omega", interval.type = "bca", B=2000, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas
omega(data)
# tes reliabilitasnya
omega(bfi) # menggunakan package psych, keluar omega total dan hierarchical omega
omega(data)
reliabilitas
# subsetting data, kita ambil 150 responden aja
data <- bfi[1:300,] %>% na.omit()
reliabilitas <- ci.reliability(data=data, type="omega", interval.type = "bca", B=500, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas
omega(data)
reliabilitas <- ci.reliability(data=data, type="hierarchical", interval.type = "bca", B=500, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas
data()
data(attitude)
force(attitude)
View(attitude)
View(attitude)
reliabilitas <- ci.reliability(data=attitude, type="omega", interval.type = "bca", B=500, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas
warnings()
reliabilitas <- ci.reliability(data=attitude, type="omega", interval.type = "bca", B=1000, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas
blogdown:::serve_site()
library(psych)
library(MBESS)
library(tidyverse)
reliabilitas <- ci.reliability(data=attitude, type="omega", interval.type = "bca", B=1000, conf.level = 0.95); beep() # menggunakan package MBESS untuk mengestimasi ci-nya omega dengan teknik bootstrapping
reliabilitas
# tes reliabilitasnya
omega(bfi) # menggunakan package psych, keluar omega total dan hierarchical omega
blogdown:::serve_site()
# tes reliabilitasnya
omega(bfi) # menggunakan package psych, keluar omega total dan hierarchical omega
source('D:/Drive/my-website/academic-kickstart-master/tutorial r script/omega.R')
View(bfi)
View(bfi)
ncol(bfi)
# ambil bfi data
data <- data(bfi[,25])
library(psych)
library(MBESS)
# ambil bfi data
data <- data(bfi[,25])
# ambil bfi data
data <- psych::data(bfi[,25])
# ambil bfi data
data <- psych::data(bfi[,25])
# ambil bfi data
psych::data(bfi[,25])
# ambil bfi data
data(bfi[,25])
# ambil bfi data
data=data(bfi[,25])
ncol(bfi)
# ambil bfi data
data(bfi[25,])
library(tidyverse)
data %>% select(bfi, 1:25)
data <- bfi %>% select(1:25)
View(data)
# tes reliabilitasnya
omega(data) # menggunakan package psych, keluar omega total dan hierarchical omega
?omega
# tes reliabilitasnya
omega(data, nfactors=5) # menggunakan package psych, keluar omega total dan hierarchical omega
# tes reliabilitasnya
omega(Thurstone) # menggunakan package psych, keluar omega total dan hierarchical omega
attitude
blogdown:::serve_site()
library(psych)
library(MBESS)
# dengan psych coba estimasi reliabilitas dengan teknik omega total
omega(Thurstone)
library(MBESS)
ci.reliability(data=attitude, type = "omega", B=500, conf.level = 0.95)
blogdown:::serve_site()
install.packages(c("anytime", "blogdown", "cluster", "dbplyr", "DT", "emmeans", "formatR", "gdtools", "ggplot2", "ggstatsplot", "installr", "MBESS", "mime", "mvtnorm", "nor1mix", "prediction", "qgraph", "qrnn", "quantmod", "R.utils", "RcppArmadillo", "servr", "sjmisc", "StanHeaders", "tidytext"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(packagefinder)
findPackage(svylme)
findPackage("svylme")
install.packages("tidystats")
library(devtools)
install_github("willemsleegers/tidystats")
install_github("WillemSleegers/tidystats")
install_github("WillemSleegers/tidystats-v0.3")
install_github("WillemSleegers/tidystats-v0.3")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("metaSEM")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
remotes::install_github("centerforopenscience/osfr")
remotes::install_github("centerforopenscience/osfr", force=TRUE)
devtools::install_github("rfigshare", "ropensci")
require(devtools)
install_github("rfigshare", "ropensci")
devtools::install_github("rfigshare")
devtools::install_github("ropensci")
install.packages("rfigshare")
install.packages("ropensci")
library(rfigshare)
require(rfigshare)
require(rfigshare)
fs_author_search("zein")
fs_author_search("zein")
fs_author_search("Rizqy Amelia Zein")
fs_author_search("Boettiger")
fs_author_search("Boettiger")
install_github("ropensci/rfigshare")
1
fs_author_search("Boettiger")
library(rfigshare)
fs_author_search("Boettiger")
library(osfr)
blogdown:::serve_site()
blogdown:::serve_site()
install.packages(c("bestNormalize", "blogdown", "bookdown", "broomExtra", "circlize", "citr", "covr", "drake", "esquisse", "forecast", "ggforce", "ggimage", "ggplot2", "gmailr", "hms", "oompaBase", "pagedown", "raster", "rgl", "RgoogleMaps", "rmarkdown", "rpart.plot", "rticles", "semPlot", "summarytools", "sys", "tidyLPA", "txtq", "ufs", "units", "xfun"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
